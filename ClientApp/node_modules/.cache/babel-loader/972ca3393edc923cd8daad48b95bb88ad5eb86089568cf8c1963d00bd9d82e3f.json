{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"G:/Diplom/IspoQueue/ClientApp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"G:/Diplom/IspoQueue/ClientApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useCopyClick from '../hooks/useCopyClick';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport CopyBtn from './CopyBtn';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n    code = _ref.code,\n    underline = _ref.underline,\n    del = _ref.delete,\n    strong = _ref.strong,\n    keyboard = _ref.keyboard,\n    italic = _ref.italic;\n  var currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _a, _b, _c;\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    type = props.type,\n    disabled = props.disabled,\n    children = props.children,\n    ellipsis = props.ellipsis,\n    editable = props.editable,\n    copyable = props.copyable,\n    component = props.component,\n    title = props.title,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _useLocale = useLocale('Text'),\n    _useLocale2 = _slicedToArray(_useLocale, 1),\n    textLocale = _useLocale2[0];\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  var _useMergedConfig = useMergedConfig(editable),\n    _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n    enableEdit = _useMergedConfig2[0],\n    editConfig = _useMergedConfig2[1];\n  var _useMergedState = useMergedState(false, {\n      value: editConfig.editing\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    editing = _useMergedState2[0],\n    setEditing = _useMergedState2[1];\n  var _editConfig$triggerTy = editConfig.triggerType,\n    triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(function () {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  var onEditChange = function onEditChange(value) {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  var onEditCancel = function onEditCancel() {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  var _useMergedConfig3 = useMergedConfig(copyable),\n    _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n    enableCopy = _useMergedConfig4[0],\n    copyConfig = _useMergedConfig4[1];\n  var _useCopyClick = useCopyClick({\n      copyConfig: copyConfig,\n      children: children\n    }),\n    copied = _useCopyClick.copied,\n    copyLoading = _useCopyClick.copyLoading,\n    onCopyClick = _useCopyClick.onClick;\n  // ========================== Ellipsis ==========================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLineClampSupport = _React$useState2[0],\n    setIsLineClampSupport = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isTextOverflowSupport = _React$useState4[0],\n    setIsTextOverflowSupport = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isJsEllipsis = _React$useState6[0],\n    setIsJsEllipsis = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    isNativeEllipsis = _React$useState8[0],\n    setIsNativeEllipsis = _React$useState8[1];\n  var _React$useState9 = React.useState(true),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    isNativeVisible = _React$useState10[0],\n    setIsNativeVisible = _React$useState10[1];\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n      expandable: false,\n      symbol: function symbol(isExpanded) {\n        return isExpanded ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand;\n      }\n    }),\n    _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n    enableEllipsis = _useMergedConfig6[0],\n    ellipsisConfig = _useMergedConfig6[1];\n  var _useMergedState3 = useMergedState(ellipsisConfig.defaultExpanded || false, {\n      value: ellipsisConfig.expanded\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    expanded = _useMergedState4[0],\n    setExpanded = _useMergedState4[1];\n  var mergedEnableEllipsis = enableEllipsis && (!expanded || ellipsisConfig.expandable === 'collapsible');\n  // Shared prop to reduce bundle size\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n    rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (\n      // Disable ellipsis\n      mergedEnableEllipsis && (\n      // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n      // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy)\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var _React$useState11 = React.useState(mergedEnableEllipsis),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    cssEllipsis = _React$useState12[0],\n    setCssEllipsis = _React$useState12[1];\n  var canUseCssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  // We use effect to change from css ellipsis to js ellipsis.\n  // To make SSR still can see the ellipsis.\n  useIsomorphicLayoutEffect(function () {\n    setCssEllipsis(canUseCssEllipsis && mergedEnableEllipsis);\n  }, [canUseCssEllipsis, mergedEnableEllipsis]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  var onExpandClick = function onExpandClick(e, info) {\n    var _a;\n    setExpanded(info.expanded);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e, info);\n  };\n  var _React$useState13 = React.useState(0),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    ellipsisWidth = _React$useState14[0],\n    setEllipsisWidth = _React$useState14[1];\n  var onResize = function onResize(_ref2) {\n    var offsetWidth = _ref2.offsetWidth;\n    setEllipsisWidth(offsetWidth);\n  };\n  // >>>>> JS Ellipsis\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    var observer = new IntersectionObserver(function () {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return function () {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  var tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(typeof val);\n    };\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n      symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    if (expanded && expandable !== 'collapsible') return null;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-\").concat(expanded ? 'collapse' : 'expand'),\n      onClick: function onClick(e) {\n        return onExpandClick(e, {\n          expanded: !expanded\n        });\n      },\n      \"aria-label\": expanded ? textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, typeof symbol === 'function' ? symbol(expanded) : symbol);\n  };\n  // Edit\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n      tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? ( /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(CopyBtn, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      loading: copyLoading,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n  var renderOperations = function renderOperations(canEllipsis) {\n    return [\n    // (renderExpanded || ellipsisConfig.collapsible) && renderExpand(),\n    canEllipsis && renderExpand(), renderEdit(), renderCopy()];\n  };\n  var renderEllipsis = function renderEllipsis(canEllipsis) {\n    return [canEllipsis && !expanded && ( /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(canEllipsis)];\n  };\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      tooltipProps: tooltipProps,\n      enableEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1 && !expanded), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      prefixCls: customizePrefixCls,\n      style: Object.assign(Object.assign({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : undefined,\n      \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enableMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      onEllipsis: onJsEllipsis,\n      expanded: expanded,\n      miscDeps: [copied, expanded, copyLoading, enableEdit, enableCopy]\n    }, function (node, canEllipsis) {\n      var renderNode = node;\n      if (node.length && canEllipsis && !expanded && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(canEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;","map":{"version":3,"names":["_defineProperty","_slicedToArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","EditOutlined","classNames","ResizeObserver","toArray","useIsomorphicLayoutEffect","useMergedState","omit","composeRef","isStyleSupport","TransButton","ConfigContext","useLocale","Tooltip","Editable","useCopyClick","useMergedConfig","useUpdatedEffect","Typography","CopyBtn","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","del","delete","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","ELLIPSIS_STR","Base","forwardRef","props","ref","_a","_b","_c","customizePrefixCls","prefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","_React$useContext","useContext","getPrefixCls","direction","_useLocale","_useLocale2","textLocale","typographyRef","useRef","editIconRef","textProps","_useMergedConfig","_useMergedConfig2","enableEdit","editConfig","_useMergedState","value","editing","_useMergedState2","setEditing","_editConfig$triggerTy","triggerType","triggerEdit","edit","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","_useMergedConfig3","_useMergedConfig4","enableCopy","copyConfig","_useCopyClick","copied","copyLoading","onCopyClick","onClick","_React$useState","useState","_React$useState2","isLineClampSupport","setIsLineClampSupport","_React$useState3","_React$useState4","isTextOverflowSupport","setIsTextOverflowSupport","_React$useState5","_React$useState6","isJsEllipsis","setIsJsEllipsis","_React$useState7","_React$useState8","isNativeEllipsis","setIsNativeEllipsis","_React$useState9","_React$useState10","isNativeVisible","setIsNativeVisible","_useMergedConfig5","expandable","symbol","isExpanded","collapse","expand","_useMergedConfig6","enableEllipsis","ellipsisConfig","_useMergedState3","defaultExpanded","expanded","_useMergedState4","setExpanded","mergedEnableEllipsis","_ellipsisConfig$rows","rows","needMeasureEllipsis","useMemo","suffix","undefined","onEllipsis","_React$useState11","_React$useState12","cssEllipsis","setCssEllipsis","canUseCssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","info","onExpand","_React$useState13","_React$useState14","ellipsisWidth","setEllipsisWidth","onResize","_ref2","offsetWidth","onJsEllipsis","jsEllipsis","useEffect","textEle","currentEllipsis","offsetHeight","scrollHeight","scrollWidth","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","text","isValidElement","assign","topAriaLabel","isValid","val","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","key","concat","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","locale","onCopy","loading","iconOnly","renderOperations","canEllipsis","renderEllipsis","resizeRef","_classNames","isEllipsis","WebkitLineClamp","toString","enableMeasure","width","miscDeps","node","renderNode","wrappedContext","Fragment"],"sources":["G:/Diplom/IspoQueue/clientapp/node_modules/antd/es/typography/Base/index.js"],"sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport TransButton from '../../_util/transButton';\nimport { ConfigContext } from '../../config-provider';\nimport useLocale from '../../locale/useLocale';\nimport Tooltip from '../../tooltip';\nimport Editable from '../Editable';\nimport useCopyClick from '../hooks/useCopyClick';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Typography from '../Typography';\nimport CopyBtn from './CopyBtn';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\nfunction wrapperDecorations(_ref, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nconst ELLIPSIS_STR = '...';\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b, _c;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [textLocale] = useLocale('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = useMergedConfig(editable);\n  const [editing, setEditing] = useMergedState(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  useUpdatedEffect(() => {\n    var _a;\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = useMergedConfig(copyable);\n  const {\n    copied,\n    copyLoading,\n    onClick: onCopyClick\n  } = useCopyClick({\n    copyConfig,\n    children\n  });\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = useMergedConfig(ellipsis, {\n    expandable: false,\n    symbol: isExpanded => isExpanded ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n  });\n  const [expanded, setExpanded] = useMergedState(ellipsisConfig.defaultExpanded || false, {\n    value: ellipsisConfig.expanded\n  });\n  const mergedEnableEllipsis = enableEllipsis && (!expanded || ellipsisConfig.expandable === 'collapsible');\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  mergedEnableEllipsis && (\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy), [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const [cssEllipsis, setCssEllipsis] = React.useState(mergedEnableEllipsis);\n  const canUseCssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  // We use effect to change from css ellipsis to js ellipsis.\n  // To make SSR still can see the ellipsis.\n  useIsomorphicLayoutEffect(() => {\n    setCssEllipsis(canUseCssEllipsis && mergedEnableEllipsis);\n  }, [canUseCssEllipsis, mergedEnableEllipsis]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = (e, info) => {\n    var _a;\n    setExpanded(info.expanded);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e, info);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const onResize = _ref2 => {\n    let {\n      offsetWidth\n    } = _ref2;\n    setEllipsisWidth(offsetWidth);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  let tooltipProps = {};\n  if (ellipsisConfig.tooltip === true) {\n    tooltipProps = {\n      title: (_a = editConfig.text) !== null && _a !== void 0 ? _a : children\n    };\n  } else if ( /*#__PURE__*/React.isValidElement(ellipsisConfig.tooltip)) {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  } else if (typeof ellipsisConfig.tooltip === 'object') {\n    tooltipProps = Object.assign({\n      title: (_b = editConfig.text) !== null && _b !== void 0 ? _b : children\n    }, ellipsisConfig.tooltip);\n  } else {\n    tooltipProps = {\n      title: ellipsisConfig.tooltip\n    };\n  }\n  const topAriaLabel = React.useMemo(() => {\n    const isValid = val => ['string', 'number'].includes(typeof val);\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    if (isValid(editConfig.text)) {\n      return editConfig.text;\n    }\n    if (isValid(children)) {\n      return children;\n    }\n    if (isValid(title)) {\n      return title;\n    }\n    if (isValid(tooltipProps.title)) {\n      return tooltipProps.title;\n    }\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: (_c = editConfig.text) !== null && _c !== void 0 ? _c : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    if (!expandable) return null;\n    if (expanded && expandable !== 'collapsible') return null;\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: `${prefixCls}-${expanded ? 'collapse' : 'expand'}`,\n      onClick: e => onExpandClick(e, {\n        expanded: !expanded\n      }),\n      \"aria-label\": expanded ? textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, typeof symbol === 'function' ? symbol(expanded) : symbol);\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) return;\n    const {\n      icon,\n      tooltip\n    } = editConfig;\n    const editTitle = toArray(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? ( /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(CopyBtn, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      loading: copyLoading,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n  const renderOperations = canEllipsis => [\n  // (renderExpanded || ellipsisConfig.collapsible) && renderExpand(),\n  canEllipsis && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = canEllipsis => [canEllipsis && !expanded && ( /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(canEllipsis)];\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => ( /*#__PURE__*/React.createElement(EllipsisTooltip, {\n    tooltipProps: tooltipProps,\n    enableEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(Typography, Object.assign({\n    className: classNames({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-single-line`]: mergedEnableEllipsis && rows === 1 && !expanded,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: composeRef(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n    enableMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    onEllipsis: onJsEllipsis,\n    expanded: expanded,\n    miscDeps: [copied, expanded, copyLoading, enableEdit, enableCopy]\n  }, (node, canEllipsis) => {\n    let renderNode = node;\n    if (node.length && canEllipsis && !expanded && topAriaLabel) {\n      renderNode = /*#__PURE__*/React.createElement(\"span\", {\n        key: \"show-content\",\n        \"aria-hidden\": true\n      }, renderNode);\n    }\n    const wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(canEllipsis)));\n    return wrappedContext;\n  })))));\n});\nexport default Base;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}