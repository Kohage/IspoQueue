{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"G:/Diplom/IspoQueue/ClientApp/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"G:/Diplom/IspoQueue/ClientApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getSize, getStrokeColor } from './utils';\nvar CIRCLE_MIN_STROKE_WIDTH = 3;\nvar getMinPercent = function getMinPercent(width) {\n  return CIRCLE_MIN_STROKE_WIDTH / width * 100;\n};\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n    _props$trailColor = props.trailColor,\n    trailColor = _props$trailColor === void 0 ? null : _props$trailColor,\n    _props$strokeLinecap = props.strokeLinecap,\n    strokeLinecap = _props$strokeLinecap === void 0 ? 'round' : _props$strokeLinecap,\n    gapPosition = props.gapPosition,\n    gapDegree = props.gapDegree,\n    _props$width = props.width,\n    originWidth = _props$width === void 0 ? 120 : _props$width,\n    type = props.type,\n    children = props.children,\n    success = props.success,\n    _props$size = props.size,\n    size = _props$size === void 0 ? originWidth : _props$size,\n    steps = props.steps;\n  var _getSize = getSize(size, 'circle'),\n    _getSize2 = _slicedToArray(_getSize, 2),\n    width = _getSize2[0],\n    height = _getSize2[1];\n  var strokeWidth = props.strokeWidth;\n  if (strokeWidth === undefined) {\n    strokeWidth = Math.max(getMinPercent(width), 6);\n  }\n  var circleStyle = {\n    width: width,\n    height: height,\n    fontSize: width * 0.15 + 6\n  };\n  var realGapDegree = React.useMemo(function () {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  var percentArray = getPercentage(props);\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  var isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  var strokeColor = getStrokeColor({\n    success: success,\n    strokeColor: props.strokeColor\n  });\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  var circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    steps: steps,\n    percent: steps ? percentArray[1] : percentArray,\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: steps ? strokeColor[1] : strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? ( /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, /*#__PURE__*/React.createElement(\"span\", null, circleContent))) : ( /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children)));\n};\nexport default Circle;","map":{"version":3,"names":["_defineProperty","_slicedToArray","React","classNames","Circle","RCCircle","Tooltip","getPercentage","getSize","getStrokeColor","CIRCLE_MIN_STROKE_WIDTH","getMinPercent","width","props","prefixCls","_props$trailColor","trailColor","_props$strokeLinecap","strokeLinecap","gapPosition","gapDegree","_props$width","originWidth","type","children","success","_props$size","size","steps","_getSize","_getSize2","height","strokeWidth","undefined","Math","max","circleStyle","fontSize","realGapDegree","useMemo","percentArray","gapPos","isGradient","Object","prototype","toString","call","strokeColor","wrapperClassName","concat","circleContent","createElement","percent","trailWidth","className","style","title","Fragment"],"sources":["G:/Diplom/IspoQueue/clientapp/node_modules/antd/es/progress/Circle.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Circle as RCCircle } from 'rc-progress';\nimport Tooltip from '../tooltip';\nimport { getPercentage, getSize, getStrokeColor } from './utils';\nconst CIRCLE_MIN_STROKE_WIDTH = 3;\nconst getMinPercent = width => CIRCLE_MIN_STROKE_WIDTH / width * 100;\nconst Circle = props => {\n  const {\n    prefixCls,\n    trailColor = null,\n    strokeLinecap = 'round',\n    gapPosition,\n    gapDegree,\n    width: originWidth = 120,\n    type,\n    children,\n    success,\n    size = originWidth,\n    steps\n  } = props;\n  const [width, height] = getSize(size, 'circle');\n  let {\n    strokeWidth\n  } = props;\n  if (strokeWidth === undefined) {\n    strokeWidth = Math.max(getMinPercent(width), 6);\n  }\n  const circleStyle = {\n    width,\n    height,\n    fontSize: width * 0.15 + 6\n  };\n  const realGapDegree = React.useMemo(() => {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  const percentArray = getPercentage(props);\n  const gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  const isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  const strokeColor = getStrokeColor({\n    success,\n    strokeColor: props.strokeColor\n  });\n  const wrapperClassName = classNames(`${prefixCls}-inner`, {\n    [`${prefixCls}-circle-gradient`]: isGradient\n  });\n  const circleContent = /*#__PURE__*/React.createElement(RCCircle, {\n    steps: steps,\n    percent: steps ? percentArray[1] : percentArray,\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: steps ? strokeColor[1] : strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, width <= 20 ? ( /*#__PURE__*/React.createElement(Tooltip, {\n    title: children\n  }, /*#__PURE__*/React.createElement(\"span\", null, circleContent))) : ( /*#__PURE__*/React.createElement(React.Fragment, null, circleContent, children)));\n};\nexport default Circle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}