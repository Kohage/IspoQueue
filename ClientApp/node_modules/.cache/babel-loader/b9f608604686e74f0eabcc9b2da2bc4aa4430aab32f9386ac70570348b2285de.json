{"ast":null,"code":"var _jsxFileName = \"G:\\\\Diplom\\\\IspoQueue\\\\ClientApp\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport AppRoutes from './AppRoutes';\nimport { Layout } from './components/Layout';\nimport './custom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const isAuthenticated = false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: AppRoutes.map((route, index) => {\n          const {\n            element,\n            ...rest\n          } = route;\n          return /*#__PURE__*/_jsxDEV(Route, {\n            ...rest,\n            element: element\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","AppRoutes","Layout","jsxDEV","_jsxDEV","Fragment","_Fragment","App","isAuthenticated","children","map","route","index","element","rest","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Diplom/IspoQueue/ClientApp/src/App.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport AppRoutes from './AppRoutes';\r\nimport { Layout } from './components/Layout';\r\nimport './custom.css';\r\n\r\nexport default function App() {\r\n  const isAuthenticated = false;\r\n  \r\n    return (\r\n      <>\r\n      <Layout>\r\n        <Routes>\r\n          {AppRoutes.map((route, index) => {\r\n            const { element, ...rest } = route;\r\n            return <Route key={index} {...rest} element={element} />;\r\n          })}\r\n        </Routes>\r\n      </Layout>\r\n\r\n      </>\r\n      \r\n      \r\n    );\r\n  }"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,MAAMC,eAAe,GAAG,KAAK;EAE3B,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACAL,OAAA,CAACF,MAAM;MAAAO,QAAA,eACLL,OAAA,CAACJ,MAAM;QAAAS,QAAA,EACJR,SAAS,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;UAC/B,MAAM;YAAEC,OAAO;YAAE,GAAGC;UAAK,CAAC,GAAGH,KAAK;UAClC,oBAAOP,OAAA,CAACL,KAAK;YAAA,GAAiBe,IAAI;YAAED,OAAO,EAAEA;UAAQ,GAAlCD,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CAAC;QAC1D,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAEP,CAAC;AAIP;AAACC,EAAA,GAlBqBZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}